---
title: "Sistema de Crecimiento y Rendimiento SIN y CON Aclareos"
author: "Abel Joseph Hernández-Martínez"
format: html
editor: visual
---


```{r}
# Paqueterías/Librerías utilizadas en este código
pacman::p_load(tidyverse, install = F)

# Función de negativo
`%nin%` <- Negate(`%in%`)
```

# SCR - Sin Aclareo

## Función 

La siguiente función `SCR_SA` (Sistema de Crecimiento y Rendimiento Sin Aclareo) se creo para obtener la tabla de rendimiento. Los argumentos de la función son los siguientes:

- `Narb`: Densidad inicial.
- `IS`: Índice de sitio
- `E`: Vector de edades para realizar la simulación. Al menos dos elementos tiene que tener el vector para obtener los resultados. En un futuro se puede mejorar la función para realizar la estimación con una sola observación
- `Eb`: Edad base utilizada en el modelo de altura dominante.

Los parámetros de cada modelo corresponden a los resultados obtenidos en el ajuste de sistema de ecuaciones realizado en SAS y reportado en el documento de word.

```{r}
SCR_SA <- function(Narb, IS, E, Eb){
  
  # Modelo de altura dominante
  AD <- function(IS, Eb, E){
    # Parámetros
    B0 = 0.805884
    B1 = 0.025645
    B2 = 1.146303

    # Proyección de AD
    AD2 = E^B2 / ((Eb^B2/IS - B1*Eb^B2) + B1*E^B2)
    return(round(AD2, 2))

  }
  
  # Modelo de mortalidad
  mortalidad <- function(Narb, E, AD){
    
    # Parámetros 
    B1 = -0.00405
    N = NA
    N[1] = Narb
    
    # Proyección
    for (i in 2:length(E)) {
      N[i] = N[i-1] * exp(B1*AD[i]*(E[i]-E[i-1]))
    }
    
    return(round(N,0))
    
  }
  
  # Modelo de AB
  AB <- function(AD, N, E){
    # Parámetros
    B0 = 0.691622; B1 =	0.942115; B2 = -0.31488
    
    # Predicción
    AB2 = NA
    AB2[1] = exp(B0)*AD[1]^B1*exp(B2/E[1])
    
    # Proyección
    for (i in 2:length(E)) {
      AB2[i] = AB2[i-1]*((AD[i]^B1*exp(B2/E[i])) / (AD[i-1]^B1*exp(B2/E[i-1])))

    }
    
    return(round(AB2,2))
    
  }
  
  # Volumen (s2)
  V <- function(E, AB, AD, N){
    # Parámetros
    B0 = -0.76259; B1	= 1.063642; B2 = 0.966123; B3 =	-0.06355

    # Predicción
    V2 = NA
    V2 = exp(B0)*AB[1]^B1*AD[1]^B2*N[1]^B3
    
    # Proyección
    for (i in 2:length(E)) {
      V2[i] = V2[i-1]*(AB[i]/AB[i-1])^B1 * (AD[i]/AD[i-1])^B2 * (N[i]/N[i-1])^B3
    }
    
    return(round(V2,2))
    
  }
  
  # Aplicación de modelos
  
  # Altura dominante
  AD2 = AD(IS = IS, Eb = Eb, E = E)
  # Mortalidad
  N2 = mortalidad(Narb = Narb, E = E, AD2)
  # Área basal
  AB2 = AB(AD = AD2, N = N2, E = E)
  # Volumen
  V2 = V(E = E, AB = AB2, AD = AD2, N = N2)
  
  # Salida
  SCR_SA_DF <- data.frame(Densidad = as.character(Narb), E, N2, AD2, AB2, V2)
  return(SCR_SA_DF)
  
}
```

## Aplicación

En el siguiente código se muestra la aplicación de la función `SCR_SA` creada en la sección anterior. Se asume que el rodal inicia con una densidad de 3,000 árboles por hectárea y tiene un índice de sitio de 24 m a una edad base de 30 años.

```{r}
# Variables de entrada para el SCR-SA

# Vector de edad
E <- 1:40
# Edad base
Eb <- 30
# Densidad inicial
Narb <- 3000
# Índice de sitio
IS = 24

# Resultados de la función
r <- SCR_SA(Narb = Narb, IS = IS, E = E, Eb = Eb)
r

```

La función también puede obtener la tabla de rendimiento para diferentes densidades iniciales. En este ejemplo se utilizan tres densidades iniciales: 3,000, 2,000 y 1,000 árboles por hectárea con la misma información de `IS`, `E` y el vector de edades creados previamente.

```{r}
# Vector con las tres densidades
densidades_iniciales <- c(3000, 2000, 1000)

# Tablas de rendimiento para tres densidades
r2 <- map_dfr(.x = densidades_iniciales, .f = ~ SCR_SA(.x, IS, E, Eb))
r2
```



## Gráficas con resultados

### Altura dominante

Resultados del modelo ajustado de Hossfeld polimórfico $\beta_0$ (Ecuación 1 del documento pdf que reporta los resultados).

```{r}
ggplot(datos_notras |> filter(AD > 0), aes(x = E, y = AD, group = parcela))+
  geom_line()+
  geom_point()+
  
  geom_line(data = r, mapping = aes(x = E, y = AD2, group = NULL),
            color = "red", linewidth = 1.2)
```

### Mortalidad

Resultados con la ecuación 3 del pdf.

```{r}
ggplot(datos_notras, aes(x = E, y = N, group = parcela))+
  geom_line()+
  geom_point()+
  
  geom_line(data = r2, mapping = aes(x = E, y = N2, group = Densidad),
            color = "red", linewidth = 1.2)
```

### Área basal

Resultados con la ecuación 5 del pdf.

```{r}
ggplot(datos_notras, aes(x = E, y = AB, group = parcela))+
  geom_line()+
  geom_point()+
  
  geom_line(data = r2, mapping = aes(x = E, y = AB2, group = Densidad),
            color = "red", linewidth = 1.2)
```

### Volumen total

Resultados con la ecuación 9 del pdf.

```{r}
ggplot(datos_notras, aes(x = E, y = V, group = parcela))+
  geom_line()+
  geom_point()+
  
  geom_line(data = r2, mapping = aes(x = E, y = V2, group = Densidad, color = factor(Densidad)),
            linewidth = 1.2)
```

# SCR - Con Aclareo

## CI ajuste

Ajuste del modelo de proyección del índice de supresión (Pieenar y Schiver, 1948) o índice de competencia (González-Benecke et al 2012).

La función de abajo corresponde a la ecuación 11.

```{r}
## Modelo de Pieenar y Schiver (1984)
fn_CI <- function(B1, B2, B3, CI1, E1, E2){
  # CI2 = CI1*exp(-(B1+B2*CI1)*((E2-E1))^B3)
  CI2 = exp(-(B1+B2*CI1)*((E2-E1))^B3)
  return(CI2)
}

fit_CI <- nls(CI2 ~ fn_CI(B1, B2, B3, CI, E, E2),
                 data = datos_notras |> filter(Aclareo == "CA"),
                 start = c(B1 = 1.04, B2 = -0.60, B3 = 0.808))

summary(fit_CI)
```

## Simulación








